{
  "version": 3,
  "sources": ["../../../../../node_modules/powerbi-client-angular/fesm2020/powerbi-client-angular.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Component, Input, ViewChild, NgModule } from '@angular/core';\nimport { service, factories } from 'powerbi-client';\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\r\n * Get JSON string representation of the given map.\r\n *\r\n * @param map Map of event and corresponding handler method\r\n *\r\n */\nconst _c0 = [\"reportContainer\"];\nconst _c1 = [\"embedConfig\", \"\"];\nconst _c2 = [\"dashboardContainer\"];\nconst _c3 = [\"tileContainer\"];\nconst _c4 = [\"paginatedReportContainer\"];\nconst _c5 = [\"visualContainer\"];\nconst _c6 = [\"qnaContainer\"];\nconst stringifyMap = map => {\n  // Return empty string for empty/null map\n  if (!map) {\n    return '';\n  }\n  // Get entries of map as array\n  const mapEntries = Array.from(map);\n  // Return JSON string\n  return JSON.stringify(mapEntries.map(mapEntry =>\n  // Convert event handler method to a string containing its source code for comparison\n  [mapEntry[0], mapEntry[1] ? mapEntry[1].toString() : '']));\n};\n// SDK information to be used with service instance\nconst sdkType = 'powerbi-client-angular';\nconst sdkWrapperVersion = '3.0.5';\n\n// Copyright (c) Microsoft Corporation.\n/**\r\n * Base component to hold common properties for all the Power BI entities\r\n */\nclass PowerBIEmbedComponent {\n  constructor() {\n    // JSON stringify of prev event handler map\n    this.prevEventHandlerMapString = '';\n  }\n  ngOnInit() {\n    // Initialize powerbi variable for child component\n    if (this.service) {\n      this.powerbi = this.service;\n    } else {\n      this.powerbi = new service.Service(factories.hpmFactory, factories.wpmpFactory, factories.routerFactory);\n    }\n    this.powerbi.setSdkInfo(sdkType, sdkWrapperVersion);\n  }\n  /**\r\n   * Sets all event handlers from the input on the embedded entity\r\n   *\r\n   * @param embed Embedded object\r\n   * @param eventHandlerMap Array of event handlers to be set on embedded entity\r\n   * @returns void\r\n   */\n  setEventHandlers(embed, eventHandlerMap) {\n    // Get string representation of eventHandlerMap\n    const eventHandlerMapString = stringifyMap(eventHandlerMap);\n    // Check if event handler map changed\n    if (this.prevEventHandlerMapString === eventHandlerMapString) {\n      return;\n    }\n    // Update prev string representation of event handler map\n    this.prevEventHandlerMapString = eventHandlerMapString;\n    // Apply all provided event handlers\n    eventHandlerMap.forEach((eventHandlerMethod, eventName) => {\n      // Removes event handler for this event\n      embed.off(eventName);\n      // Event handler is effectively removed for this event when eventHandlerMethod is null\n      if (eventHandlerMethod) {\n        // Set single event handler\n        embed.on(eventName, event => {\n          eventHandlerMethod(event, embed);\n        });\n      }\n    });\n  }\n}\nPowerBIEmbedComponent.ɵfac = function PowerBIEmbedComponent_Factory(t) {\n  return new (t || PowerBIEmbedComponent)();\n};\nPowerBIEmbedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PowerBIEmbedComponent,\n  selectors: [[\"powerbi-embed\"]],\n  inputs: {\n    cssClassName: \"cssClassName\",\n    service: \"service\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function PowerBIEmbedComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PowerBIEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-embed',\n      template: ''\n    }]\n  }], null, {\n    cssClassName: [{\n      type: Input\n    }],\n    service: [{\n      type: Input\n    }]\n  });\n})();\n\n// Copyright (c) Microsoft Corporation.\n/**\r\n * Report component to embed the report, extends the Base Component\r\n */\nclass PowerBIReportEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super();\n    // Phased embedding flag (Optional)\n    this.phasedEmbedding = false;\n  }\n  // Getter for this._embed\n  get embed() {\n    return this._embed;\n  }\n  // Setter for this._embed\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  }\n  // Returns embed object to calling function\n  getReport() {\n    return this._embed;\n  }\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue;\n      // Check if the function is being called for the first time\n      if (!prevEmbedConfig) {\n        return;\n      }\n      // Input from parent get updated, thus call embedOrUpdateReport function\n      this.embedOrUpdateReport(prevEmbedConfig);\n    }\n    // Set event handlers if available\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed, load or bootstrap\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\n        this.embedReport();\n      } else {\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\n      }\n    }\n    // Set event handlers if available\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  /**\r\n   * Embed or load the PowerBI Report based on phasedEmbedding flag\r\n   *\r\n   * @returns void\r\n   */\n  embedReport() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    }\n    // Load when phasedEmbedding flag is true, embed otherwise\n    if (this.phasedEmbedding) {\n      this.embed = this.powerbi.load(this.containerRef.nativeElement, this.embedConfig);\n    } else {\n      this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n    }\n  }\n  /**\r\n   * When component updates, choose to _embed_ or _load_ the powerbi report\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IReportEmbedConfiguration\r\n   * @returns void\r\n   */\n  embedOrUpdateReport(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    }\n    // Embed or load in the following scenario\n    // Embed URL is updated (E.g. New report is to be embedded)\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedReport();\n    }\n  }\n}\nPowerBIReportEmbedComponent.ɵfac = function PowerBIReportEmbedComponent_Factory(t) {\n  return new (t || PowerBIReportEmbedComponent)();\n};\nPowerBIReportEmbedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PowerBIReportEmbedComponent,\n  selectors: [[\"powerbi-report\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBIReportEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    embedConfig: \"embedConfig\",\n    phasedEmbedding: \"phasedEmbedding\",\n    eventHandlers: \"eventHandlers\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"reportContainer\", \"\"]],\n  template: function PowerBIReportEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", null, 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PowerBIReportEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-report[embedConfig]',\n      template: '<div class={{cssClassName}} #reportContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    embedConfig: [{\n      type: Input\n    }],\n    phasedEmbedding: [{\n      type: Input\n    }],\n    eventHandlers: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['reportContainer']\n    }]\n  });\n})();\n\n// Copyright (c) Microsoft Corporation.\n/**\r\n * Dashboard component to embed the dashboard, extends the Base component\r\n */\nclass PowerBIDashboardEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super();\n  }\n  // Getter for this._embed\n  get embed() {\n    return this._embed;\n  }\n  // Setter for this._embed\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  }\n  // Returns embed object to calling function\n  getDashboard() {\n    return this.embed;\n  }\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue;\n      // Check if the function is being called for the first time\n      if (!prevEmbedConfig) {\n        return;\n      }\n      // Input from parent get updated, thus call embedOrUpdateDashboard function\n      this.embedOrUpdateDashboard(prevEmbedConfig);\n    }\n    // Set event handlers if available\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed or bootstrap\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\n        this.embedDashboard();\n      } else {\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\n      }\n    }\n    // Set event handlers if available\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  /**\r\n   * Embed the PowerBI Dashboard\r\n   *\r\n   * @returns void\r\n   */\n  embedDashboard() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    }\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n  }\n  /**\r\n   * When component updates, choose to _embed_ the powerbi dashboard\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IDashboardEmbedConfiguration\r\n   * @returns void\r\n   */\n  embedOrUpdateDashboard(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    }\n    // Embed in the following scenario\n    // Embed URL is updated (E.g. New dashboard is to be embedded)\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedDashboard();\n    }\n  }\n}\nPowerBIDashboardEmbedComponent.ɵfac = function PowerBIDashboardEmbedComponent_Factory(t) {\n  return new (t || PowerBIDashboardEmbedComponent)();\n};\nPowerBIDashboardEmbedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PowerBIDashboardEmbedComponent,\n  selectors: [[\"powerbi-dashboard\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBIDashboardEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    embedConfig: \"embedConfig\",\n    eventHandlers: \"eventHandlers\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"dashboardContainer\", \"\"]],\n  template: function PowerBIDashboardEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", null, 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PowerBIDashboardEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-dashboard[embedConfig]',\n      template: '<div class={{cssClassName}} #dashboardContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    embedConfig: [{\n      type: Input\n    }],\n    eventHandlers: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['dashboardContainer']\n    }]\n  });\n})();\n\n// Copyright (c) Microsoft Corporation.\n/**\r\n * Tile component to embed the tile, extends Base component\r\n */\nclass PowerBITileEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super();\n  }\n  // Getter for this._embed\n  get embed() {\n    return this._embed;\n  }\n  // Setter for this._embed\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  }\n  // Returns embed object to calling function\n  getTile() {\n    return this._embed;\n  }\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue;\n      // Check if the function is being called for the first time\n      if (!prevEmbedConfig) {\n        return;\n      }\n      // Input from parent get updated, thus call embedOrUpdateDashboard function\n      this.embedOrUpdateTile(prevEmbedConfig);\n    }\n    // Set event handlers if available\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed or bootstrap\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\n        this.embedTile();\n      } else {\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\n      }\n    }\n    // Set event handlers if available\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  /**\r\n   * Embed the PowerBI Tile\r\n   *\r\n   * @returns void\r\n   */\n  embedTile() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    }\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n  }\n  /**\r\n   * When component updates, choose to _embed_ the powerbi tile\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig ITileEmbedConfiguration\r\n   * @returns void\r\n   */\n  embedOrUpdateTile(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    }\n    // Embed in the following scenario\n    // Embed URL is updated (E.g. New tile is to be embedded)\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedTile();\n    }\n  }\n}\nPowerBITileEmbedComponent.ɵfac = function PowerBITileEmbedComponent_Factory(t) {\n  return new (t || PowerBITileEmbedComponent)();\n};\nPowerBITileEmbedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PowerBITileEmbedComponent,\n  selectors: [[\"powerbi-tile\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBITileEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c3, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    embedConfig: \"embedConfig\",\n    eventHandlers: \"eventHandlers\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"tileContainer\", \"\"]],\n  template: function PowerBITileEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", null, 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PowerBITileEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-tile[embedConfig]',\n      template: '<div class={{cssClassName}} #tileContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    embedConfig: [{\n      type: Input\n    }],\n    eventHandlers: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['tileContainer']\n    }]\n  });\n})();\n\n// Copyright (c) Microsoft Corporation.\n/**\r\n * Paginated report component to embed the entity, extends the Base component\r\n */\nclass PowerBIPaginatedReportEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super();\n  }\n  // Getter for this._embed\n  get embed() {\n    return this._embed;\n  }\n  // Setter for this._embed\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  }\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue;\n      // Check if the function is being called for the first time\n      if (!prevEmbedConfig) {\n        return;\n      }\n      // Input from parent get updated, thus call embedOrUpdateDashboard function\n      this.embedOrUpdatedPaginatedReport(prevEmbedConfig);\n    }\n  }\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed\n      this.embedPaginatedReport();\n    }\n  }\n  /**\r\n   * Embed the PowerBI Paginated report\r\n   *\r\n   * @returns void\r\n   */\n  embedPaginatedReport() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    }\n    // Embed paginated report\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n  }\n  /**\r\n   * When component updates, choose to _embed_ the powerbi paginated report\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IEmbedConfiguration\r\n   * @returns void\r\n   */\n  embedOrUpdatedPaginatedReport(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    }\n    // Embed in the following scenario\n    // Embed URL is updated (E.g. New paginated report is to be embedded)\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedPaginatedReport();\n    }\n  }\n}\nPowerBIPaginatedReportEmbedComponent.ɵfac = function PowerBIPaginatedReportEmbedComponent_Factory(t) {\n  return new (t || PowerBIPaginatedReportEmbedComponent)();\n};\nPowerBIPaginatedReportEmbedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PowerBIPaginatedReportEmbedComponent,\n  selectors: [[\"powerbi-paginated-report\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBIPaginatedReportEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    embedConfig: \"embedConfig\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"paginatedReportContainer\", \"\"]],\n  template: function PowerBIPaginatedReportEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", null, 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PowerBIPaginatedReportEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-paginated-report[embedConfig]',\n      template: '<div class={{cssClassName}} #paginatedReportContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    embedConfig: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['paginatedReportContainer']\n    }]\n  });\n})();\n\n// Copyright (c) Microsoft Corporation.\n/**\r\n * Visual component to embed the visual, extends Base component\r\n */\nclass PowerBIVisualEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super();\n  }\n  // Getter for this._embed\n  get embed() {\n    return this._embed;\n  }\n  // Setter for this._embed\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  }\n  // Returns embed object to calling function\n  getVisual() {\n    return this._embed;\n  }\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue;\n      // Check if the function is being called for the first time\n      if (!prevEmbedConfig) {\n        return;\n      }\n      // Input from parent get updated, thus call embedOrUpdateDashboard function\n      this.embedOrUpdateVisual(prevEmbedConfig);\n    }\n    // Set event handlers if available\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed or bootstrap\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\n        this.embedVisual();\n      } else {\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\n      }\n    }\n    // Set event handlers if available\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  /**\r\n   * Embed the PowerBI Visual\r\n   *\r\n   * @returns void\r\n   */\n  embedVisual() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    }\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n  }\n  /**\r\n   * When component updates, choose to _embed_ the powerbi visual\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IVisualEmbedConfiguration\r\n   * @returns void\r\n   */\n  embedOrUpdateVisual(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    }\n    // Embed in the following scenario\n    // Embed URL is updated (E.g. New visual is to be embedded)\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedVisual();\n    }\n  }\n}\nPowerBIVisualEmbedComponent.ɵfac = function PowerBIVisualEmbedComponent_Factory(t) {\n  return new (t || PowerBIVisualEmbedComponent)();\n};\nPowerBIVisualEmbedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PowerBIVisualEmbedComponent,\n  selectors: [[\"powerbi-visual\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBIVisualEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c5, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    embedConfig: \"embedConfig\",\n    eventHandlers: \"eventHandlers\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"visualContainer\", \"\"]],\n  template: function PowerBIVisualEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", null, 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PowerBIVisualEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-visual[embedConfig]',\n      template: '<div class={{cssClassName}} #visualContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    embedConfig: [{\n      type: Input\n    }],\n    eventHandlers: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['visualContainer']\n    }]\n  });\n})();\n\n// Copyright (c) Microsoft Corporation.\n/**\r\n * Qna component to embed the Qna visual, extends Base component\r\n */\nclass PowerBIQnaEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super();\n  }\n  // Getter for this._embed\n  get embed() {\n    return this._embed;\n  }\n  // Setter for this._embed\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  }\n  // Returns embed object to calling function\n  getQna() {\n    return this._embed;\n  }\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue;\n      // Check if the function is being called for the first time\n      if (!prevEmbedConfig) {\n        return;\n      }\n      // Input from parent get updated, thus call embedOrUpdateDashboard function\n      this.embedOrUpdateQna(prevEmbedConfig);\n    }\n    // Set event handlers if available\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed or bootstrap\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\n        this.embedQnaVisual();\n      } else {\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\n      }\n    }\n    // Set event handlers if available\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  /**\r\n   * Embed the PowerBI QnA Visual\r\n   *\r\n   * @returns void\r\n   */\n  embedQnaVisual() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    }\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n  }\n  /**\r\n   * When component updates, choose to _embed_ the powerbi qna visual\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IQnaEmbedConfiguration\r\n   * @returns void\r\n   */\n  embedOrUpdateQna(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    }\n    // Embed in the following scenario\n    // Embed URL is updated (E.g. New Qna visual is to be embedded)\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedQnaVisual();\n    }\n  }\n}\nPowerBIQnaEmbedComponent.ɵfac = function PowerBIQnaEmbedComponent_Factory(t) {\n  return new (t || PowerBIQnaEmbedComponent)();\n};\nPowerBIQnaEmbedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PowerBIQnaEmbedComponent,\n  selectors: [[\"powerbi-qna\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBIQnaEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c6, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    embedConfig: \"embedConfig\",\n    eventHandlers: \"eventHandlers\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"qnaContainer\", \"\"]],\n  template: function PowerBIQnaEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", null, 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PowerBIQnaEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-qna[embedConfig]',\n      template: '<div class={{cssClassName}} #qnaContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    embedConfig: [{\n      type: Input\n    }],\n    eventHandlers: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['qnaContainer']\n    }]\n  });\n})();\n\n// Copyright (c) Microsoft Corporation.\nclass PowerBIEmbedModule {}\nPowerBIEmbedModule.ɵfac = function PowerBIEmbedModule_Factory(t) {\n  return new (t || PowerBIEmbedModule)();\n};\nPowerBIEmbedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PowerBIEmbedModule,\n  declarations: [PowerBIEmbedComponent, PowerBIDashboardEmbedComponent, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent],\n  exports: [PowerBIDashboardEmbedComponent, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent]\n});\nPowerBIEmbedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PowerBIEmbedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [PowerBIEmbedComponent, PowerBIDashboardEmbedComponent, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent],\n      imports: [],\n      exports: [PowerBIDashboardEmbedComponent, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent]\n    }]\n  }], null, null);\n})();\n\n// Copyright (c) Microsoft Corporation.\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { PowerBIDashboardEmbedComponent, PowerBIEmbedModule, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent };\n"],
  "mappings": "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",
  "names": []
}
